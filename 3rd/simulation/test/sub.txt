942 129
2
4
5
7
8
9
11
12
14
15
17
18
20
21
23
24
26
28
29
30
31
33
35
36
38
40
41
42
43
45
47
48
50
51
52
53
54
55
56
57
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
79
80
81
82
84
85
86
87
88
89
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
111
113
114
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
136
137
139
140
141
142
143
144
146
147
148
149
150
151
152
154
155
156
158
159
160
163
164
165
166
168
169
170
171
172
173
175
176
178
179
180
181
182
183
184
186
187
188
189
191
192
193
194
195
196
198
199
201
202
203
204
205
207
208
210
211
212
213
214
215
216
217
218
219
220
221
223
224
225
226
227
228
229
230
231
232
233
234
235
237
238
239
240
242
243
245
246
247
248
250
251
253
254
255
256
258
259
261
262
263
265
266
268
269
270
272
273
275
276
277
278
279
281
282
284
285
286
287
289
290
291
292
293
294
296
297
298
299
301
302
304
305
306
307
308
309
310
311
312
313
314
316
317
318
320
321
322
323
324
325
326
327
328
330
331
333
334
336
337
338
339
340
341
342
343
344
345
347
348
349
351
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
371
372
373
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
393
394
395
396
397
398
399
400
401
402
403
404
406
407
408
410
411
413
414
415
416
417
419
421
422
423
425
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
457
458
459
460
461
462
463
464
465
466
467
469
470
471
472
473
474
475
476
477
478
479
480
482
483
484
485
486
487
488
489
490
491
492
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
510
511
512
513
514
515
516
517
518
519
521
522
523
524
525
526
527
528
529
530
531
533
534
535
536
537
538
539
540
541
542
544
545
546
547
548
550
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
582
583
584
585
586
587
588
589
590
591
592
594
595
596
597
598
599
600
601
602
603
604
605
607
608
609
610
611
612
613
614
615
616
617
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
637
638
639
640
641
642
643
644
645
646
647
649
650
651
652
653
654
655
656
657
658
659
661
662
663
664
665
666
667
668
669
670
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
734
735
736
737
739
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
783
785
786
788
789
790
791
793
794
795
796
797
798
799
800
802
803
804
805
806
807
808
810
811
813
814
815
817
818
819
820
821
822
824
826
827
828
829
830
831
832
833
834
835
836
837
838
840
842
843
844
845
847
848
849
850
851
852
853
854
855
856
857
858
860
861
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
920
921
923
924
925
926
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
951
952
953
954
955
956
957
958
959
960
961
962
963
965
967
969
970
971
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1026
1027
1029
1030
1032
1033
1034
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1050
1051
1054
1058
1059
1060
1061
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1 3 lib_print_char
3 6 lib_print_newline
6 10 lib_itof
8 13 lib_ftoi
10 16 lib_fneg
12 19 lib_sqrt
14 22 lib_create_array
16 25 lib_create_array_loop
17 27 lib_create_array_cont
21 32 lib_create_array_exit
22 34 lib_create_float_array
24 37 lib_create_float_array_loop
25 39 lib_create_float_array_cont
29 44 lib_create_float_array_exit
30 46 lib_read_char
32 49 lib_buffer_add_char
40 58 lib_buffer_clear
59 78 lib_buffer_get
63 83 lib_buffer_to_int
69 90 lib_buffer_to_int_cont
88 110 lib_buffer_to_int_exit
89 112 lib_buffer_to_int_minus
91 115 lib_buffer_to_int_minus_cont
110 135 lib_buffer_to_int_minus_exit
112 138 lib_buffer_to_int_of_float
118 145 lib_buffer_to_pos_loop
125 153 lib_buffer_to_int_of_float_minus
128 157 lib_buffer_to_int_cont_ready
131 162 lib_buffer_to_dec_of_float
135 167 lib_buffer_to_pos_loop_dec
141 174 lib_buffer_to_dec_zero
143 177 lib_buffer_to_dec_of_float_cont
150 185 lib_buffer_to_ika_keta_of_float
154 190 lib_buffer_to_pos_loop_keta
160 197 lib_buffer_to_ika_keta_zero
162 200 lib_buffer_to_ika_keta_of_float_cont
167 206 lib_fless
169 209 lib_read_int
181 222 lib_read_float
194 236 lib_fispos
198 241 _fle_else.749
200 244 lib_fisneg
204 249 _fle_else.750
206 252 lib_fiszero
210 257 _feq_else.751
212 260 lib_xor
215 264 _beq_then.752
217 267 lib_fhalf
220 271 lib_fsqr
222 274 lib_fabs
227 280 _fle_else.753
229 283 lib_int_of_float
233 288 _feq_else.754
239 295 _fle_else.755
243 300 lib_float_of_int
245 303 lib_floor
256 315 _fle_else.756
259 319 lib_hoge
268 329 _fle_else.758
270 332 _fle_else.757
272 335 lib_fuga
282 346 _fle_else.760
285 350 _fle_else.759
286 352 lib_modulo_2pi
302 369 _fle_else.761
302 370 _fle_cont.762
305 374 lib_sin_body
322 392 lib_cos_body
334 405 lib_abs_float
337 409 _fle_else.763
339 412 lib_sin
344 418 _fle_else.764
345 420 _fle_cont.765
348 424 _fle_else.766
349 426 _fle_cont.767
378 456 _fle_else.770
389 468 _fle_else.769
401 481 _fle_else.771
412 493 _fle_else.768
427 509 _fle_else.773
437 520 _fle_else.772
448 532 _fle_else.774
458 543 lib_cos
463 549 _fle_else.775
464 551 _fle_cont.776
493 581 _fle_else.779
504 593 _fle_else.778
516 606 _fle_else.780
527 618 _fle_else.777
544 636 _fle_else.782
555 648 _fle_else.781
566 660 _fle_else.783
576 671 lib_atan_body
637 733 lib_atan
641 738 _fle_else.784
642 740 _fle_cont.785
664 763 _fle_else.787
682 782 _fle_else.786
683 784 lib_print_num
685 787 lib_mul10
689 792 lib_div10_sub
697 801 _ble_then.788
704 809 _ble_then.789
706 812 lib_div10
709 816 lib_iter_mul10
715 823 _beq_then.790
716 825 lib_iter_div10
729 839 _beq_then.791
730 841 lib_keta_sub
734 846 _ble_then.792
746 859 lib_keta
748 862 lib_print_uint_keta
772 887 _ble_then.794
803 919 _beq_then.793
805 922 lib_print_uint
809 927 _ble_then.795
831 950 lib_print_int
844 964 _ble_then.796
845 966 lib_truncate
846 968 lib_print_dec
849 972 _feq_else.797
872 996 lib_print_ufloat
900 1025 _fle_else.799
902 1028 _fle_cont.800
904 1031 lib_print_float
907 1035 _fle_else.801
917 1046 _R_0
917 1048 _R_0
917 1049 _min_caml_start
