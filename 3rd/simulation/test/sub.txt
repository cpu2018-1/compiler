1294 141
2
4
5
7
8
9
11
12
14
15
17
18
20
21
23
24
26
28
29
30
31
33
35
36
38
40
41
42
43
45
47
48
50
51
52
53
54
55
56
57
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
79
80
81
82
84
85
86
87
88
89
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
111
113
114
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
136
137
139
140
141
142
143
144
146
147
148
149
150
151
152
154
155
156
158
159
160
163
164
165
166
168
169
170
171
172
173
175
176
178
179
180
181
182
183
184
186
187
188
189
191
192
193
194
195
196
198
199
201
202
203
204
205
207
208
210
211
212
213
214
215
216
217
218
219
220
221
223
224
225
226
227
228
229
230
231
232
233
234
235
237
238
239
240
241
243
244
246
247
248
249
250
252
253
255
256
257
258
259
261
262
264
265
266
268
269
271
272
273
275
276
278
279
280
281
283
284
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
306
307
308
310
311
312
313
314
316
317
318
319
320
321
323
324
325
327
329
330
331
332
333
334
335
336
337
339
340
342
343
345
346
347
348
349
350
351
352
353
354
356
357
358
360
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
384
385
386
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
406
407
408
409
410
411
412
413
414
415
416
417
419
420
421
422
423
424
426
427
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
474
475
476
477
478
479
480
481
482
483
484
485
486
487
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
507
508
509
510
511
512
513
514
515
516
517
518
519
520
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
544
545
546
547
548
549
550
551
552
553
554
555
556
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
575
576
577
578
579
580
581
582
583
584
585
586
587
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
636
637
638
639
640
641
642
643
644
645
646
647
648
649
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
669
670
671
672
673
674
675
676
677
678
679
680
681
682
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
708
709
710
711
712
713
714
715
716
717
718
719
720
721
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
740
741
742
743
744
745
746
747
748
749
750
751
752
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
816
817
818
819
820
821
823
824
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
876
878
879
881
882
883
884
886
887
888
889
890
891
892
893
895
896
897
898
899
900
901
903
904
906
907
908
910
911
912
913
914
915
917
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
935
937
938
939
940
942
943
944
945
946
947
948
949
950
951
952
953
954
955
957
958
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1027
1028
1030
1031
1032
1033
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1078
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1105
1107
1108
1109
1111
1112
1114
1115
1116
1118
1119
1121
1122
1123
1125
1126
1128
1129
1130
1132
1133
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1152
1153
1154
1155
1156
1158
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
1256
1257
1258
1259
1260
1261
1262
1263
1264
1265
1266
1267
1268
1269
1270
1271
1272
1273
1274
1275
1277
1279
1280
1281
1282
1284
1285
1287
1288
1289
1290
1292
1293
1294
1295
1296
1297
1298
1299
1300
1301
1302
1303
1304
1305
1306
1307
1308
1309
1310
1311
1312
1313
1314
1315
1316
1317
1318
1319
1320
1321
1322
1323
1324
1325
1326
1328
1329
1330
1331
1332
1333
1334
1335
1336
1337
1338
1339
1340
1341
1342
1343
1344
1345
1346
1347
1348
1349
1350
1351
1352
1353
1354
1355
1356
1357
1358
1359
1360
1361
1362
1363
1364
1365
1366
1367
1368
1369
1371
1372
1374
1375
1377
1378
1379
1380
1382
1383
1384
1385
1386
1387
1388
1389
1390
1391
1392
1393
1397
1398
1401
1402
1404
1405
1406
1407
1408
1409
1410
1411
1412
1413
1414
1415
1416
1417
1418
1419
1420
1421
1423
1424
1425
1426
1427
1428
1429
1430
1431
1432
1433
1434
1435
1436
1437
1438
1439
1440
1 3 lib_print_char
3 6 lib_print_newline
6 10 lib_itof
8 13 lib_ftoi
10 16 lib_fneg
12 19 lib_sqrt
14 22 lib_create_array
16 25 lib_create_array_loop
17 27 lib_create_array_cont
21 32 lib_create_array_exit
22 34 lib_create_float_array
24 37 lib_create_float_array_loop
25 39 lib_create_float_array_cont
29 44 lib_create_float_array_exit
30 46 lib_read_char
32 49 lib_buffer_add_char
40 58 lib_buffer_clear
59 78 lib_buffer_get
63 83 lib_buffer_to_int
69 90 lib_buffer_to_int_cont
88 110 lib_buffer_to_int_exit
89 112 lib_buffer_to_int_minus
91 115 lib_buffer_to_int_minus_cont
110 135 lib_buffer_to_int_minus_exit
112 138 lib_buffer_to_int_of_float
118 145 lib_buffer_to_pos_loop
125 153 lib_buffer_to_int_of_float_minus
128 157 lib_buffer_to_int_cont_ready
131 162 lib_buffer_to_dec_of_float
135 167 lib_buffer_to_pos_loop_dec
141 174 lib_buffer_to_dec_zero
143 177 lib_buffer_to_dec_of_float_cont
150 185 lib_buffer_to_ika_keta_of_float
154 190 lib_buffer_to_pos_loop_keta
160 197 lib_buffer_to_ika_keta_zero
162 200 lib_buffer_to_ika_keta_of_float_cont
167 206 lib_fless
169 209 lib_read_int
181 222 lib_read_float
194 236 lib_fispos
199 242 _fle_else.878
201 245 lib_fisneg
206 251 _fle_else.879
208 254 lib_fiszero
213 260 _feq_else.880
215 263 lib_xor
218 267 _beq_then.881
220 270 lib_fhalf
223 274 lib_fsqr
225 277 lib_fabs
229 282 _fle_else.882
231 285 lib_floor
250 305 _fle_else.883
253 309 lib_int_of_float
258 315 _feq_else.884
264 322 _fle_else.885
267 326 lib_float_of_int
268 328 lib_hoge
277 338 _fle_else.887
279 341 _fle_else.886
281 344 lib_fuga
291 355 _fle_else.889
294 359 _fle_else.888
295 361 lib_modulo_2pi
315 382 _fle_else.890
315 383 _fle_cont.891
318 387 lib_sin_body
335 405 lib_cos_body
347 418 lib_sin
353 425 _fle_else.892
355 428 _fle_cont.893
399 473 _fle_else.896
413 488 _fle_else.895
430 506 _fle_else.897
444 521 _fle_else.894
465 543 _fle_else.899
478 557 _fle_else.898
494 574 _fle_else.900
507 588 lib_cos
553 635 _fle_else.903
567 650 _fle_else.902
584 668 _fle_else.904
598 683 _fle_else.901
621 707 _fle_else.906
635 722 _fle_else.905
651 739 _fle_else.907
664 753 lib_atan_body
725 815 lib_atan
731 822 _fle_else.908
733 825 _fle_cont.909
758 851 _fle_else.911
781 875 _fle_else.910
782 877 lib_print_num
784 880 lib_mul10
788 885 lib_div10_sub
796 894 _ble_then.912
803 902 _ble_then.913
805 905 lib_div10
808 909 lib_iter_mul10
814 916 _beq_then.914
815 918 lib_iter_div10
830 934 _beq_then.915
831 936 lib_keta_sub
835 941 _ble_then.916
849 956 lib_keta
851 959 lib_print_uint_keta
879 988 _ble_then.918
916 1026 _beq_then.917
918 1029 lib_print_uint
922 1034 _ble_then.919
948 1061 lib_print_int
963 1077 _ble_then.920
964 1079 lib_read_token
988 1104 _beq_then.925
989 1106 _beq_then.924
992 1110 _beq_then.927
994 1113 _beq_then.923
997 1117 _beq_then.929
999 1120 _beq_then.922
1002 1124 _beq_then.931
1004 1127 _beq_then.921
1007 1131 _beq_then.933
1009 1134 lib_read_int_ascii
1025 1151 lib_iter_div10_float
1030 1157 _beq_then.935
1031 1159 lib_read_float_ascii
1111 1240 _beq_then.936
1146 1276 lib_truncate
1147 1278 lib_abs_float
1151 1283 _fle_else.937
1153 1286 lib_print_dec
1157 1291 _feq_else.938
1192 1327 lib_print_ufloat
1234 1370 _fle_else.940
1236 1373 _fle_cont.941
1238 1376 lib_print_float
1242 1381 _fle_else.942
1254 1394 _R_0
1254 1396 f.8
1256 1399 _R_0
1256 1400 _min_caml_start
